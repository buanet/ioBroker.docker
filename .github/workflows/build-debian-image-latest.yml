# Github action to build Docker image from main branch (tag: latest)
name: Build debian latest (buanet)

on:
  release:
    types:
      - released
  workflow_dispatch:

jobs:
  build-latest-image:
    runs-on: ubuntu-latest
    steps:
      - name: Fetching latest release tag
        run: |
          LATESTRELEASE="$(curl -sL https://api.github.com/repos/buanet/ioBroker.docker/releases/latest | jq -r '.tag_name')"
          echo "Latest release tag : $LATESTRELEASE"
          echo "RELEASE_TAG=$LATESTRELEASE" >> $GITHUB_ENV

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          repository: 'buanet/ioBroker.docker'
          ref: ${{ env.RELEASE_TAG }}

      - name: Fetching and adding version tag and date
        id: version
        run: |
          VERSION="$(cat .VERSION)"
          MAJORVERSION="$(cat .VERSION | cut -c 1-2 | sed -r 's#^(.{0})#\1latest-#')"
          DATI="$(date --rfc-3339=seconds | sed 's/ /T/')"
          echo "This is the Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "This is the Major Version: $MAJORVERSION"
          echo "majorversion=$MAJORVERSION" >> $GITHUB_ENV
          echo "This is the Buildnumber/Timestamp: $DATI"
          echo "dati=$DATI" >> $GITHUB_ENV
          # startup script
          sed -e "s/\${VERSION}/$VERSION/" -e "s/\${BUILD}/$DATI/" ./debian/scripts/iobroker_startup.sh > ./debian/scripts/iobroker_startup.tmp
          mv -f ./debian/scripts/iobroker_startup.tmp ./debian/scripts/iobroker_startup.sh
          # amd64
          sed -e "s/\${VERSION}/$VERSION/" -e "s/\${DATI}/$DATI/" ./debian/node14/Dockerfile > ./debian/node14/Dockerfile.tmp 
          mv -f ./debian/node14/Dockerfile.tmp ./debian/node14/Dockerfile

      - name: Set up manifest tool
        run: |
          wget https://github.com/estesp/manifest-tool/releases/download/v0.7.0/manifest-tool-linux-amd64 -O manifest-tool
          chmod +x manifest-tool

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.7.0

      - name: Login to DockerHub (buanet)
        uses: docker/login-action@v1.14.1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ secrets.PACKAGES_USER }}
          password: ${{ secrets.PACKAGES_PASS }}

      - name: Build Docker image (amd64)
        uses: docker/build-push-action@v2.10.0
        with:
          context: ./debian
          file: ./debian/node14/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            buanet/iobroker:${{ env.version }}-amd64,
            ghcr.io/buanet/iobroker:${{ env.version }}-amd64

      - name: Build Docker image (arm32v7)
        uses: docker/build-push-action@v2.10.0
        with:
          context: ./debian
          file: ./debian/node14/Dockerfile
          push: true
          platforms: linux/arm/v7
          tags: |
            buanet/iobroker:${{ env.version }}-arm32v7,
            ghcr.io/buanet/iobroker:${{ env.version }}-arm32v7

      - name: Build Docker image (arm64v8)
        uses: docker/build-push-action@v2.10.0
        with:
          context: ./debian
          file: ./debian/node14/Dockerfile
          push: true
          platforms: linux/arm64/v8
          tags: |
            buanet/iobroker:${{ env.version }}-arm64v8,
            ghcr.io/buanet/iobroker:${{ env.version }}-arm64v8

      - name: Create and push manifests (buanet)
        run: |
          sed -e "s/\${VERSION}/${{ env.version }}/g" -e "s/\${DOCKERTAG}/latest/g" ./manifest.yml > manifest_latest.yaml
          ./manifest-tool --username ${{ secrets.DOCKER_USER }} --password ${{ secrets.DOCKER_PASS }} push from-spec manifest_latest.yaml
          sed -e "s/\${VERSION}/${{ env.version }}/g" -e "s/\${DOCKERTAG}/latest/g" ./manifest_ghcr.yml > manifest_ghcr_latest.yaml
          ./manifest-tool --username ${{ secrets.PACKAGES_USER }} --password ${{ secrets.PACKAGES_PASS }} push from-spec manifest_ghcr_latest.yaml
          sed -e "s/\${VERSION}/${{ env.version }}/g" -e "s/\${DOCKERTAG}/${{ env.majorversion }}/g" ./manifest.yml > manifest_majorversion.yaml
          ./manifest-tool --username ${{ secrets.DOCKER_USER }} --password ${{ secrets.DOCKER_PASS }} push from-spec manifest_majorversion.yaml
          sed -e "s/\${VERSION}/${{ env.version }}/g" -e "s/\${DOCKERTAG}/${{ env.majorversion }}/g" ./manifest_ghcr.yml > manifest_ghcr_majorversion.yaml
          ./manifest-tool --username ${{ secrets.PACKAGES_USER }} --password ${{ secrets.PACKAGES_PASS }} push from-spec manifest_ghcr_majorversion.yaml
          sed -e "s/\${VERSION}/${{ env.version }}/g" -e "s/\${DOCKERTAG}/${{ env.version }}/g" ./manifest.yml > manifest_version.yaml
          ./manifest-tool --username ${{ secrets.DOCKER_USER }} --password ${{ secrets.DOCKER_PASS }} push from-spec manifest_version.yaml
          sed -e "s/\${VERSION}/${{ env.version }}/g" -e "s/\${DOCKERTAG}/${{ env.version }}/g" ./manifest_ghcr.yml > manifest_ghcr_version.yaml
          ./manifest-tool --username ${{ secrets.PACKAGES_USER }} --password ${{ secrets.PACKAGES_PASS }} push from-spec manifest_ghcr_version.yaml

      - name: Delete untagged images from GitHub packages
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PACKAGES_PASS }}
          script: |
            const response = await github.request("GET /users/${{ env.OWNER }}/packages/container/${{ env.PACKAGE_NAME }}/versions",
              { per_page: ${{ env.PER_PAGE }}
            });
            for(version of response.data) {
                if (version.metadata.container.tags.length == 0) {
                    console.log("delete " + version.id)
                    const deleteResponse = await github.request("DELETE /user/packages/container/${{ env.PACKAGE_NAME }}/versions/" + version.id, { });
                    console.log("status " + deleteResponse.status)
                }
            }
        env:
          OWNER: buanet
          PACKAGE_NAME: iobroker
          PER_PAGE: 100      
